# Add expiry for images/html/css.
map $sent_http_content_type $expires {
  default off;
  text/html               epoch;
  text/css                7d;
  application/javascript  7d;
  ~image/                 7d;
}

# Configuration of logging to disable request logging for images and css.
# This cuts down on request log clutter.
map $sent_http_content_type $loggable {
    ~image/ 0;
    text/css 0;
    default 1;
}

# This is our main server block that defines how we will handle requests
# and pass them to any backend servers.
server {
    root /var/app/public;

    # Using port 8080 so we do not have to run as root.
    # We are the only server, therefore, the default.
    listen 0.0.0.0:8080 default_server;

    # Apply our expires config from above.
    expires $expires;

    client_max_body_size 8m;

    client_header_timeout ${NGINX_TIMEOUT};
    client_body_timeout ${NGINX_TIMEOUT};
    send_timeout ${NGINX_TIMEOUT};
    proxy_connect_timeout ${NGINX_TIMEOUT};
    proxy_send_timeout ${NGINX_TIMEOUT};
    proxy_read_timeout ${NGINX_TIMEOUT};

    # If we are an image/static file, try and file locally and 404 if not found.
    location ~ \.(bmp|jpeg|ttf|jpg|pict|svg|webp|css|js|svgz|png|ico|tif|tiff)$ {
        try_files $uri =404;
    }

    # If we are not an image/static file, check if the file exists, and if not, pass to php.
    location / {
        try_files $uri /index.php$is_args$args;
    }

    # If we are a .php file, pass through to the FPM host.
    location ~ ^/index\.php(/|$) {
        # Retrieve the host from the environment. This is using envsubst.
        fastcgi_pass ${PHP_HOST};

        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        include fastcgi_params;

        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;

        fastcgi_read_timeout ${NGINX_FASTCGI_READ_TIMEOUT};
        fastcgi_ignore_client_abort on;
        fastcgi_buffer_size 8k;
        fastcgi_buffers 8 8k;

        internal;
    }

    # Finally, if a php file that is not index is requested directly, throw a 404.
    location ~ \.php$ {
        return 404;
    }

    error_log /dev/stderr error;

    # Apply
    access_log /dev/stdout combined if=$loggable;
}